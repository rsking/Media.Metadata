// <auto-generated/>
using ApiSdk.Search.Remoteid.Item;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace ApiSdk.Search.Remoteid {
    /// <summary>
    /// Builds and executes requests for operations under \search\remoteid
    /// </summary>
    public class RemoteidRequestBuilder : BaseRequestBuilder {
        /// <summary>Gets an item from the ApiSdk.search.remoteid.item collection</summary>
        /// <param name="position">Search for a specific remote id.  Allows searching for an IMDB or EIDR id, for example.</param>
        public WithRemoteItemRequestBuilder this[string position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            urlTplParams.Add("remoteId", position);
            return new WithRemoteItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>
        /// Instantiates a new RemoteidRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RemoteidRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/search/remoteid", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new RemoteidRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public RemoteidRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/search/remoteid", rawUrl) {
        }
    }
}
