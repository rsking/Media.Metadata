// <auto-generated/>
using ApiSdk.Artwork;
using ApiSdk.Awards;
using ApiSdk.Characters;
using ApiSdk.Companies;
using ApiSdk.Content;
using ApiSdk.Countries;
using ApiSdk.Entities;
using ApiSdk.Episodes;
using ApiSdk.Genders;
using ApiSdk.Genres;
using ApiSdk.Inspiration;
using ApiSdk.Languages;
using ApiSdk.Lists;
using ApiSdk.Login;
using ApiSdk.Movies;
using ApiSdk.People;
using ApiSdk.Search;
using ApiSdk.Seasons;
using ApiSdk.Series;
using ApiSdk.Sources;
using ApiSdk.Updates;
using ApiSdk.User;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using Microsoft.Kiota.Serialization.Form;
using Microsoft.Kiota.Serialization.Json;
using Microsoft.Kiota.Serialization.Multipart;
using Microsoft.Kiota.Serialization.Text;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace ApiSdk
{
    /// <summary>
    /// The main entry point of the SDK, exposes the configuration and the fluent API.
    /// </summary>
    public class ApiClient : BaseRequestBuilder
    {
        /// <summary>The artwork property</summary>
        public ApiSdk.Artwork.ArtworkRequestBuilder Artwork
        {
            get => new ApiSdk.Artwork.ArtworkRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The awards property</summary>
        public ApiSdk.Awards.AwardsRequestBuilder Awards
        {
            get => new ApiSdk.Awards.AwardsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The characters property</summary>
        public ApiSdk.Characters.CharactersRequestBuilder Characters
        {
            get => new ApiSdk.Characters.CharactersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The companies property</summary>
        public ApiSdk.Companies.CompaniesRequestBuilder Companies
        {
            get => new ApiSdk.Companies.CompaniesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The content property</summary>
        public ApiSdk.Content.ContentRequestBuilder Content
        {
            get => new ApiSdk.Content.ContentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The countries property</summary>
        public ApiSdk.Countries.CountriesRequestBuilder Countries
        {
            get => new ApiSdk.Countries.CountriesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The entities property</summary>
        public ApiSdk.Entities.EntitiesRequestBuilder Entities
        {
            get => new ApiSdk.Entities.EntitiesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The episodes property</summary>
        public ApiSdk.Episodes.EpisodesRequestBuilder Episodes
        {
            get => new ApiSdk.Episodes.EpisodesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The genders property</summary>
        public ApiSdk.Genders.GendersRequestBuilder Genders
        {
            get => new ApiSdk.Genders.GendersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The genres property</summary>
        public ApiSdk.Genres.GenresRequestBuilder Genres
        {
            get => new ApiSdk.Genres.GenresRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The inspiration property</summary>
        public ApiSdk.Inspiration.InspirationRequestBuilder Inspiration
        {
            get => new ApiSdk.Inspiration.InspirationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The languages property</summary>
        public ApiSdk.Languages.LanguagesRequestBuilder Languages
        {
            get => new ApiSdk.Languages.LanguagesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The lists property</summary>
        public ApiSdk.Lists.ListsRequestBuilder Lists
        {
            get => new ApiSdk.Lists.ListsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The login property</summary>
        public ApiSdk.Login.LoginRequestBuilder Login
        {
            get => new ApiSdk.Login.LoginRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The movies property</summary>
        public ApiSdk.Movies.MoviesRequestBuilder Movies
        {
            get => new ApiSdk.Movies.MoviesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The people property</summary>
        public ApiSdk.People.PeopleRequestBuilder People
        {
            get => new ApiSdk.People.PeopleRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The search property</summary>
        public ApiSdk.Search.SearchRequestBuilder Search
        {
            get => new ApiSdk.Search.SearchRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The seasons property</summary>
        public ApiSdk.Seasons.SeasonsRequestBuilder Seasons
        {
            get => new ApiSdk.Seasons.SeasonsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The series property</summary>
        public ApiSdk.Series.SeriesRequestBuilder Series
        {
            get => new ApiSdk.Series.SeriesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The sources property</summary>
        public ApiSdk.Sources.SourcesRequestBuilder Sources
        {
            get => new ApiSdk.Sources.SourcesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The updates property</summary>
        public ApiSdk.Updates.UpdatesRequestBuilder Updates
        {
            get => new ApiSdk.Updates.UpdatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The user property</summary>
        public ApiSdk.User.UserRequestBuilder User
        {
            get => new ApiSdk.User.UserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="ApiSdk.ApiClient"/> and sets the default values.
        /// </summary>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ApiClient(IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}", new Dictionary<string, object>())
        {
            ApiClientBuilder.RegisterDefaultSerializer<JsonSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<TextSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<FormSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultSerializer<MultipartSerializationWriterFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<JsonParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<TextParseNodeFactory>();
            ApiClientBuilder.RegisterDefaultDeserializer<FormParseNodeFactory>();
            if (string.IsNullOrEmpty(RequestAdapter.BaseUrl))
            {
                RequestAdapter.BaseUrl = "https://api4.thetvdb.com/v4";
            }
            PathParameters.TryAdd("baseurl", RequestAdapter.BaseUrl);
        }
    }
}
