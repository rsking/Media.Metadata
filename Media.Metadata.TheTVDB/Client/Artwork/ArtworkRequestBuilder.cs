// <auto-generated/>
#pragma warning disable CS0618
using ApiSdk.Artwork.Item;
using ApiSdk.Artwork.Statuses;
using ApiSdk.Artwork.Types;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System;
namespace ApiSdk.Artwork
{
    /// <summary>
    /// Builds and executes requests for operations under \artwork
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.19.0")]
    internal partial class ArtworkRequestBuilder : BaseRequestBuilder
    {
        /// <summary>The statuses property</summary>
        public global::ApiSdk.Artwork.Statuses.StatusesRequestBuilder Statuses
        {
            get => new global::ApiSdk.Artwork.Statuses.StatusesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The types property</summary>
        public global::ApiSdk.Artwork.Types.TypesRequestBuilder Types
        {
            get => new global::ApiSdk.Artwork.Types.TypesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the ApiSdk.artwork.item collection</summary>
        /// <param name="position">id</param>
        /// <returns>A <see cref="global::ApiSdk.Artwork.Item.ArtworkItemRequestBuilder"/></returns>
        public global::ApiSdk.Artwork.Item.ArtworkItemRequestBuilder this[double position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("id", position);
                return new global::ApiSdk.Artwork.Item.ArtworkItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Artwork.ArtworkRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ArtworkRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/artwork", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Artwork.ArtworkRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ArtworkRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/artwork", rawUrl)
        {
        }
    }
}
#pragma warning restore CS0618
