// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ApiSdk.Models
{
    /// <summary>
    /// search result
    /// </summary>
    public class SearchResult : IAdditionalDataHolder, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The aliases property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Aliases { get; set; }
#nullable restore
#else
        public List<string> Aliases { get; set; }
#endif
        /// <summary>The companies property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Companies { get; set; }
#nullable restore
#else
        public List<string> Companies { get; set; }
#endif
        /// <summary>The companyType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyType { get; set; }
#nullable restore
#else
        public string CompanyType { get; set; }
#endif
        /// <summary>The country property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Country { get; set; }
#nullable restore
#else
        public string Country { get; set; }
#endif
        /// <summary>The director property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Director { get; set; }
#nullable restore
#else
        public string Director { get; set; }
#endif
        /// <summary>The first_air_time property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FirstAirTime { get; set; }
#nullable restore
#else
        public string FirstAirTime { get; set; }
#endif
        /// <summary>The genres property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Genres { get; set; }
#nullable restore
#else
        public List<string> Genres { get; set; }
#endif
        /// <summary>The id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id { get; set; }
#nullable restore
#else
        public string Id { get; set; }
#endif
        /// <summary>The image_url property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageUrl { get; set; }
#nullable restore
#else
        public string ImageUrl { get; set; }
#endif
        /// <summary>The is_official property</summary>
        public bool? IsOfficial { get; set; }
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The name_translated property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NameTranslated { get; set; }
#nullable restore
#else
        public string NameTranslated { get; set; }
#endif
        /// <summary>The network property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Network { get; set; }
#nullable restore
#else
        public string Network { get; set; }
#endif
        /// <summary>The objectID property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ObjectID { get; set; }
#nullable restore
#else
        public string ObjectID { get; set; }
#endif
        /// <summary>The officialList property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OfficialList { get; set; }
#nullable restore
#else
        public string OfficialList { get; set; }
#endif
        /// <summary>The overview property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Overview { get; set; }
#nullable restore
#else
        public string Overview { get; set; }
#endif
        /// <summary>translation simple record</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApiSdk.Models.TranslationSimple? Overviews { get; set; }
#nullable restore
#else
        public ApiSdk.Models.TranslationSimple Overviews { get; set; }
#endif
        /// <summary>The overview_translated property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? OverviewTranslated { get; set; }
#nullable restore
#else
        public List<string> OverviewTranslated { get; set; }
#endif
        /// <summary>The poster property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Poster { get; set; }
#nullable restore
#else
        public string Poster { get; set; }
#endif
        /// <summary>The posters property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Posters { get; set; }
#nullable restore
#else
        public List<string> Posters { get; set; }
#endif
        /// <summary>The primary_language property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrimaryLanguage { get; set; }
#nullable restore
#else
        public string PrimaryLanguage { get; set; }
#endif
        /// <summary>The remote_ids property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<ApiSdk.Models.RemoteID>? RemoteIds { get; set; }
#nullable restore
#else
        public List<ApiSdk.Models.RemoteID> RemoteIds { get; set; }
#endif
        /// <summary>The slug property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Slug { get; set; }
#nullable restore
#else
        public string Slug { get; set; }
#endif
        /// <summary>The status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status { get; set; }
#nullable restore
#else
        public string Status { get; set; }
#endif
        /// <summary>The studios property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Studios { get; set; }
#nullable restore
#else
        public List<string> Studios { get; set; }
#endif
        /// <summary>The thumbnail property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Thumbnail { get; set; }
#nullable restore
#else
        public string Thumbnail { get; set; }
#endif
        /// <summary>The title property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title { get; set; }
#nullable restore
#else
        public string Title { get; set; }
#endif
        /// <summary>translation simple record</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public ApiSdk.Models.TranslationSimple? Translations { get; set; }
#nullable restore
#else
        public ApiSdk.Models.TranslationSimple Translations { get; set; }
#endif
        /// <summary>The translationsWithLang property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? TranslationsWithLang { get; set; }
#nullable restore
#else
        public List<string> TranslationsWithLang { get; set; }
#endif
        /// <summary>The tvdb_id property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TvdbId { get; set; }
#nullable restore
#else
        public string TvdbId { get; set; }
#endif
        /// <summary>The type property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Type { get; set; }
#nullable restore
#else
        public string Type { get; set; }
#endif
        /// <summary>The year property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Year { get; set; }
#nullable restore
#else
        public string Year { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="ApiSdk.Models.SearchResult"/> and sets the default values.
        /// </summary>
        public SearchResult()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="ApiSdk.Models.SearchResult"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static ApiSdk.Models.SearchResult CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new ApiSdk.Models.SearchResult();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "aliases", n => { Aliases = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "companies", n => { Companies = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "companyType", n => { CompanyType = n.GetStringValue(); } },
                { "country", n => { Country = n.GetStringValue(); } },
                { "director", n => { Director = n.GetStringValue(); } },
                { "first_air_time", n => { FirstAirTime = n.GetStringValue(); } },
                { "genres", n => { Genres = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "image_url", n => { ImageUrl = n.GetStringValue(); } },
                { "is_official", n => { IsOfficial = n.GetBoolValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "name_translated", n => { NameTranslated = n.GetStringValue(); } },
                { "network", n => { Network = n.GetStringValue(); } },
                { "objectID", n => { ObjectID = n.GetStringValue(); } },
                { "officialList", n => { OfficialList = n.GetStringValue(); } },
                { "overview", n => { Overview = n.GetStringValue(); } },
                { "overview_translated", n => { OverviewTranslated = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "overviews", n => { Overviews = n.GetObjectValue<ApiSdk.Models.TranslationSimple>(ApiSdk.Models.TranslationSimple.CreateFromDiscriminatorValue); } },
                { "poster", n => { Poster = n.GetStringValue(); } },
                { "posters", n => { Posters = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "primary_language", n => { PrimaryLanguage = n.GetStringValue(); } },
                { "remote_ids", n => { RemoteIds = n.GetCollectionOfObjectValues<ApiSdk.Models.RemoteID>(ApiSdk.Models.RemoteID.CreateFromDiscriminatorValue)?.ToList(); } },
                { "slug", n => { Slug = n.GetStringValue(); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "studios", n => { Studios = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "thumbnail", n => { Thumbnail = n.GetStringValue(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "translations", n => { Translations = n.GetObjectValue<ApiSdk.Models.TranslationSimple>(ApiSdk.Models.TranslationSimple.CreateFromDiscriminatorValue); } },
                { "translationsWithLang", n => { TranslationsWithLang = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "tvdb_id", n => { TvdbId = n.GetStringValue(); } },
                { "type", n => { Type = n.GetStringValue(); } },
                { "year", n => { Year = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("aliases", Aliases);
            writer.WriteCollectionOfPrimitiveValues<string>("companies", Companies);
            writer.WriteStringValue("companyType", CompanyType);
            writer.WriteStringValue("country", Country);
            writer.WriteStringValue("director", Director);
            writer.WriteStringValue("first_air_time", FirstAirTime);
            writer.WriteCollectionOfPrimitiveValues<string>("genres", Genres);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("image_url", ImageUrl);
            writer.WriteBoolValue("is_official", IsOfficial);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("name_translated", NameTranslated);
            writer.WriteStringValue("network", Network);
            writer.WriteStringValue("objectID", ObjectID);
            writer.WriteStringValue("officialList", OfficialList);
            writer.WriteStringValue("overview", Overview);
            writer.WriteObjectValue<ApiSdk.Models.TranslationSimple>("overviews", Overviews);
            writer.WriteCollectionOfPrimitiveValues<string>("overview_translated", OverviewTranslated);
            writer.WriteStringValue("poster", Poster);
            writer.WriteCollectionOfPrimitiveValues<string>("posters", Posters);
            writer.WriteStringValue("primary_language", PrimaryLanguage);
            writer.WriteCollectionOfObjectValues<ApiSdk.Models.RemoteID>("remote_ids", RemoteIds);
            writer.WriteStringValue("slug", Slug);
            writer.WriteStringValue("status", Status);
            writer.WriteCollectionOfPrimitiveValues<string>("studios", Studios);
            writer.WriteStringValue("thumbnail", Thumbnail);
            writer.WriteStringValue("title", Title);
            writer.WriteObjectValue<ApiSdk.Models.TranslationSimple>("translations", Translations);
            writer.WriteCollectionOfPrimitiveValues<string>("translationsWithLang", TranslationsWithLang);
            writer.WriteStringValue("tvdb_id", TvdbId);
            writer.WriteStringValue("type", Type);
            writer.WriteStringValue("year", Year);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
